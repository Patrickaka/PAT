#include <cstdio>
using namespace std;
struct Solution
{
    int sum;
    int a, b;
} sol[100010];
int num[100010] = {0};
int sum[100010] = {0};
int lower_bound(int left,int right,int x)
{
    int mid;
    while(left < right){
        mid = (left + right) / 2;
        if(sum[mid] >= x)
            right = mid;
        else
            left = mid + 1;
    }
    return left;
}
int main()
{
    int n, m;
    scanf("%d %d", &n, &m);
    for (int i = 1; i <= n; i++)
    {
        scanf("%d", &num[i]);
        sum[i] = sum[i - 1] + num[i];
    }
    int near = 10001000;
    for (int i = 0; i <= n; i++)
    {
        int ans = m + sum[i];
        int j = lower_bound(i, n + 1, ans);
        if(sum[j] - sum[i] == m){
            near = m;
            break;
        }
        else if(j <= n && sum[j] - sum[i] < near)
        {
            near = sum[j] - sum[i];
        }
    }
    for (int i = 0; i <= n;i++){
        int ans = m + sum[i];
        int j = lower_bound(i, n + 1, ans);
        if(sum[j] - sum[i] == near)
            printf("%d-%d\n", i + 1, j);
    }
    return 0;
}
